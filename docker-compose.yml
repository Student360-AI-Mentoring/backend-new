services:
  app:
    container_name: backend_app
    build: 
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      DATABASE_TYPE: ${DATABASE_TYPE:-postgres}
      DATABASE_HOST: db
      DATABASE_PORT: ${DATABASE_PORT:-5432}
      DATABASE_USERNAME: ${DATABASE_USERNAME:-postgres}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD:-password}
      DATABASE_NAME: ${DATABASE_NAME:-student_db}
      DATABASE_WAIT_TIMEOUT: ${DATABASE_WAIT_TIMEOUT:-60}
      JWT_SECRET: ${JWT_SECRET:-development-jwt-secret-change-in-production}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-24h}
      CORS_ORIGIN: ${CORS_ORIGIN:-*}
      SWAGGER_ENABLED: ${SWAGGER_ENABLED:-false}
    depends_on:
      db:
        condition: service_healthy

  db:
    container_name: postgres_db
    image: postgres:17-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${DATABASE_NAME:-student_db}
      POSTGRES_USER: ${DATABASE_USERNAME:-postgres}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD:-password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  redis_data:
